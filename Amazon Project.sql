/* creating databse */
create schema amazon;
use amazon ;

/* if the table already exists it will drop it */
drop table if exists sales;

/* creating table sales */ 

create table sales (
	Invoiceid varchar(50),
    Branch varchar(50),
    city varchar(50),
    customertype varchar(50),
    gender varchar(20),
    productline varchar(40),
    unitPrice float, 
    quantity int,
    tax float ,
    total float,
    date varchar(50),
    time varchar(50),
    payment varchar(50),
    cogs float,
    grossmargin float ,
    grossincome float,
    rating float 
);

select * from sales;


### handling null values 

select 
	sum(case when invoiceid is null then 1 else 0 end) invoiceid_null_values, 
    sum(case when branch is null then 1 else 0 end) branch_null_values,
    sum(case when city is null then 1 else 0 end) city_null_values ,
    sum(case when customertype is null then 1 else 0 end) customertype_null_values ,
    sum(case when gender is null then 1 else 0 end) gender_null_values ,
    sum(case when productline is null then 1 else 0 end) productline_null_values,
    sum(case when unitprice is null then 1 else 0 end) unitprice_null_values ,
    sum(case when quantity is null then 1 else 0 end) quantity_null_values ,
    sum(case when tax is null then 1 else 0 end) tax_null_values ,
    sum(case when total is null then 1 else 0 end) total_null_values ,
    sum(case when date is null then 1 else 0 end) date_null_values ,
    sum(case when time is null then 1 else 0 end) time_null_values ,
    sum(case when payment is null then 1 else 0 end) payment_null_values ,
    sum(case when cogs is null then 1 else 0 end) cogs_null_values ,
    sum(case when grossmargin is null then 1 else 0 end) grossmargin_null_values ,
    sum(case when grossincome is null then 1 else 0 end) grossincome_null_values,
    sum(case when rating is null then 1 else 0 end) rating_null_values
from sales;

### adding timeofday column to the original datset 
/* using timeofday the revenue has generating highest on specific timeofday */

/* using alter we can add delete drop and modify some contraints */ 

alter table sales 
add column timeofday varchar(50); ### adding column timeofday

set sql_safe_updates = 0; ### using this method when we forgot where clause for specific condition then it throughs an error it hadles that error 

update  sales ## updating the timeofday null values instead of Morning Afternoon Evening Night by the given time 
set timeofday = 
				case
                when hour(time) between 6 and 11 then 'Morning'
                when hour(time) between 11 and 15 then 'Afternoon'
                when hour(time) between 15 and 19 then 'Evening' 
                else 'Night'
                end ;
                

### How many Branch and City are represented in given dataset 

select 
	branch,
    city 
from sales 
group by 1,2
order by 1;

### How much Revenue generated by the sales 

select 
	sum(total) total_revenue ,
    avg(total) avg_revenue 
from sales ;

### Highest Revenue Generated by each productline  

select 
	productline,
    sum(total) total_revenue 
from sales 
group by 1
order by total_revenue desc;

### Which Productline has generated least sales 

select 
	productline,
    sum(total) total_revenue 
from sales 
group by 1
order by total_revenue ;

### How much quantity sold for each product line 

select 
	productline,
    sum(quantity) total_quantity 
from sales 
group by 1 
order by 2 desc;


### For Each Product line Highest rating by customers 

select 
	distinct customertype,
    productline,
    rating
from 
		(select 
			customertype,
			productline,
			rating,
			dense_rank() over(partition by customertype,productline order by rating desc) rnk 
		from sales 
) customer_rating 
where rnk = 1;

### Which customer type has generated highest revenue  

select 	
	customertype ,
    sum(total) total_revenue 
from sales 
group by 1;

### which customer type has generated highest revenue on each product line 
with product_sales as (
select 
	customertype,
    productline,
    sum(total) over(partition by customertype,productline) rnk 
from sales
)
select 
	customertype,
    productline,
    max(rnk) 
from product_sales 
group by 1,2 ;


### Total revenue generated by each city 

select 
	city, 
    sum(total) total_revenue 
from sales
group by 1
order by 2 desc; 


### Which customer type has generated highest revenue using Ewallet 

select 
	customertype,
    payment,
    sum(total) revenue
from sales 
group by 1,2 
having payment = 'Ewallet'
order by revenue desc;